{"version":3,"sources":["trivia.png","components/CustomInput.js","services/loginRequirements.js","services/fetchToken.js","actions/actionsFetchToken.js","pages/Login.js","pages/Settings.js","actions/actionsQuestions.js","components/Questions.js","components/Header.js","pages/Game.js","components/NenhumRegistroEncontrado.js","components/Player.js","pages/Ranking.js","pages/Feedback.js","reducers/tokenReducer.js","reducers/questionReducer.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["module","exports","CustomInput","this","props","name","dataTestId","value","type","onChange","className","required","placeholder","data-testid","React","Component","loginfo","fetchToken","fetch","then","response","json","data","ok","Promise","resolve","reject","tokenFetcher","dispatch","token","localStorage","setItem","error","tokenNotFound","message","FormLogin","state","Nome","Email","Disabled","stateUpdater","bind","disableCheck","setLocalStorage","to","size","stateInicial","player","gravatarEmail","assertions","score","JSON","stringify","setState","target","src","trivia","alt","loginRequirements","map","key","disabled","onClick","id","settingsButton","connect","Settings","amount","category","difficult","redirect","saveChanges","settings","htmlFor","min","max","fetchQuestions","a","async","questions","Questions","disable","tempo","currentQuestion","timerFunction","stopCounter","nextQuestion","prev","buttonsWrong","document","querySelectorAll","forEach","button","style","border","dif","parse","getItem","question","difficulty","soma","e","scored","window","clearInterval","interval","setInterval","prevState","resposta","text","replace","m","timer","length","email","md5","ranking","picture","decode","respostas","index","dataTestid","event","choosed","Header","avatar","Game","fetchQuestion","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","newQuestions","results","pergunta","correct","correct_answer","incorrect","incorrect_answers","detalhes","newDetalhes","shuffle","tokenReducer","questionsReducer","NenhumRegistro","Player","entry","Ranking","players","sortingPlayers","sort","b","parseInt","Feedback","answers","ggMessage","bgMessage","gameFeedback","INICIAL_STATE","isFetching1","error1","action","initialState","combineReducers","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","store","path","component","exact","Login","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,oC,wcC6B5BC,E,iLAzBH,IAAD,EAC6CC,KAAKC,MAAjDC,EADD,EACCA,KAAMC,EADP,EACOA,WAAYC,EADnB,EACmBA,MAAOC,EAD1B,EAC0BA,KAAMC,EADhC,EACgCA,SACvC,OACE,2BACEC,UAAU,eACVF,KAAOA,EACPG,SAAS,WACTN,KAAOA,EACPO,YAAcP,EACdQ,cAAcP,EACdC,MAAQA,EACRE,SAAWA,Q,GAZOK,IAAMC,WCSjBC,EAZC,CACd,CACEX,KAAM,OACNG,KAAM,OACNF,WAAY,qBAEd,CACED,KAAM,QACNG,KAAM,QACNF,WAAY,yBCADW,EARI,kBACjBC,MAFU,qDAGPC,MAAK,SAACC,GAAD,OACJA,EACGC,OACAF,MAAK,SAACG,GAAD,OAAWF,EAASG,GAAKC,QAAQC,QAAQH,GAAQE,QAAQE,OAAOJ,UCavE,SAASK,IACd,OAAO,SAACC,GAEN,OADAA,EAdK,CAAEpB,KALqB,qBAoBrBS,IACJE,MACC,SAACC,GAAD,OAAcQ,GAdFC,EAcsBT,EAASS,MAbjDC,aAAaC,QAAQ,QAASF,GACvB,CAAErB,KATgB,cASGqB,WAF9B,IAAoBA,KAeZ,SAACG,GAAD,OAAWJ,EAVnB,SAAuBI,GACrB,MAAO,CAAExB,KAZoB,kBAYGwB,SASNC,CAAcD,EAAME,c,6BCd1CC,E,YACJ,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,UAAU,GAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBATX,E,kFAcZxB,EADuBd,KAAKC,MAApBa,gB,uCAKR,OACE,yBAAKP,UAAU,eACb,kBAAC,IAAD,CAAMkC,GAAG,YACP,4BAAQpC,KAAK,SAASK,cAAY,eAAeH,UAAU,WACzD,kBAAC,IAAD,CAAOmC,KAAK,Y,wCAOH,IAAD,EACQ1C,KAAKiC,MACvBU,EAAe,CACnBC,OAAQ,CACN1C,KAJY,EACRgC,KAIJW,cALY,EACFV,MAKVW,WAAY,EACZC,MAAO,IAIXpB,aAAaC,QAAQ,QAASoB,KAAKC,UAAUN,M,qCAG/B,IAAD,EACW3C,KAAKiC,MAArBC,EADK,EACLA,KAAMC,EADD,EACCA,MACD,KAATD,GAAyB,KAAVC,EACjBnC,KAAKkD,UAAS,iBAAO,CAAEd,UAAU,MAEjCpC,KAAKkD,UAAS,iBAAO,CAAEd,UAAU,Q,sCAIX,IAAD,OAAVe,EAAU,EAAVA,OACLjD,EAAgBiD,EAAhBjD,KAAME,EAAU+C,EAAV/C,MACdJ,KAAKkD,UAAS,iCAAUhD,EAAOE,MAAU,kBAAM,EAAKmC,oB,+BAG5C,IAAD,SAC2BvC,KAAKiC,MAA/BG,EADD,EACCA,SAAUF,EADX,EACWA,KAAMC,EADjB,EACiBA,MACxB,OACE,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAK6C,IAAMC,IAASC,IAAI,SAAS/C,UAAU,4BAE3C,8BAEIgD,EAAkBC,KAAI,gBAAGtD,EAAH,EAAGA,KAAMG,EAAT,EAASA,KAAMF,EAAf,EAAeA,WAAf,OACpB,kBAAC,EAAD,CACEsD,IAAMvD,EACNA,KAAOA,EACPE,MAAiB,SAATF,EAAkBgC,EAAOC,EACjC9B,KAAOA,EACPF,WAAaA,EACbG,SAAW,EAAK+B,mBAKxB,kBAAC,IAAD,CAAM9B,UAAU,YAAYkC,GAAG,aAC7B,4BACEpC,KAAK,SACLK,cAAY,WACZgD,SAAWtB,EACXuB,QAAU3D,KAAKwC,gBACfoB,GAAG,cACHrD,UAAU,0BANZ,YAWDP,KAAK6D,uB,GA3FQlD,IAAMC,WA0GfkD,cAAQ,MARI,SAACrC,GAAD,MAAe,CACxCX,WAAY,kBAAMW,EAASD,SAOdsC,CAAkC9B,GChH5B+B,G,mBACnB,aAAe,IAAD,8BACZ,+CAEK9B,MAAQ,CACX+B,OAAQ,IACRC,SAAU,GACVC,UAAW,GACX7D,KAAM,GACN8D,UAAU,GAGZ,EAAK9B,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK8B,YAAc,EAAKA,YAAY9B,KAAjB,gBAZP,E,2EAgBZX,aAAa0C,SAAWrB,KAAKC,UAAUjD,KAAKiC,OAC5CjC,KAAKkD,SAAS,CAAEiB,UAAU,M,sCAGF,IAAXhB,EAAU,EAAVA,OACLjD,EAAgBiD,EAAhBjD,KAAME,EAAU+C,EAAV/C,MACdJ,KAAKkD,SAAL,eAAiBhD,EAAOE,M,+BAGhB,IAAD,EACiDJ,KAAKiC,MAArDkC,EADD,EACCA,SAAUH,EADX,EACWA,OAAQC,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,UAAW7D,EADxC,EACwCA,KAC/C,OAAI8D,EACK,kBAAC,IAAD,CAAU1B,GAAG,MAIpB,yBAAKlC,UAAU,sBACb,wBAAIG,cAAY,iBAAiBH,UAAU,MAA3C,YAEA,kBAAC,IAAD,CAAMkC,GAAG,KACP,4BAAQpC,KAAK,SAASE,UAAU,qBAC9B,kBAAC,IAAD,QAIJ,0BAAMA,UAAU,YACd,yBAAKA,UAAU,eACb,2BAAO+D,QAAQ,UAAf,uBAEE,2BACEjE,KAAK,SACLH,KAAK,SACL0D,GAAG,gBACHrD,UAAU,eACVD,SAAWN,KAAKqC,aAChBkC,IAAI,IACJC,IAAI,KACJpE,MAAQ4D,KAIZ,2BAAOM,QAAQ,YAAf,mBAEE,4BACEhE,SAAWN,KAAKqC,aAChBnC,KAAK,WACLE,MAAQ6D,EACR1D,UAAU,gBAEV,4BAAQH,MAAM,IAAd,gBACA,4BAAQA,MAAM,KAAd,qBACA,4BAAQA,MAAM,MAAd,wBACA,4BAAQA,MAAM,MAAd,uBACA,4BAAQA,MAAM,MAAd,wBACA,4BAAQA,MAAM,MAAd,sCACA,4BAAQA,MAAM,MAAd,6BACA,4BAAQA,MAAM,MAAd,8BACA,4BAAQA,MAAM,MAAd,8BACA,4BAAQA,MAAM,MAAd,oBACA,4BAAQA,MAAM,MAAd,sBACA,4BAAQA,MAAM,MAAd,wBACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YACA,4BAAQA,MAAM,MAAd,yBACA,4BAAQA,MAAM,MAAd,oBACA,4BAAQA,MAAM,MAAd,yCACA,4BAAQA,MAAM,MAAd,yCAIJ,2BAAOkE,QAAQ,aAAf,qBAEE,4BACEhE,SAAWN,KAAKqC,aAChBnC,KAAK,YACLE,MAAQ8D,EACR3D,UAAU,gBAEV,4BAAQH,MAAM,IAAd,kBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,UAIJ,2BAAOkE,QAAQ,QAAf,eAEE,4BACEhE,SAAWN,KAAKqC,aAChBjC,MAAQC,EACRH,KAAK,OACLK,UAAU,gBAEV,4BAAQH,MAAM,IAAd,YACA,4BAAQA,MAAM,YAAd,mBACA,4BAAQA,MAAM,WAAd,kBAIJ,4BACEG,UAAU,mCACVF,KAAK,SACLsD,QAAU3D,KAAKoE,aAHjB,2B,GA3H0BzD,IAAMC,Y,yBCc7B6D,EAZQ,SAAC/C,EAAO2C,GAAR,OAAqB,SAAO5C,GAAP,yBAAAiD,EAAAC,OAAA,mDACtC1D,EAAW,GACE,KAAboD,EAFsC,uBAGhCL,EAAsCK,EAAtCL,OAAQC,EAA8BI,EAA9BJ,SAAUC,EAAoBG,EAApBH,UAAW7D,EAASgE,EAAThE,KAHG,WAAAqE,EAAA,MAIvB3D,MAAM,sCAAD,OAAuCiD,EAAvC,qBAA0DC,EAA1D,uBAAiFC,EAAjF,iBAAmG7D,EAAnG,kBAAiHqB,KAJ/F,OAIxCT,EAJwC,iDAAAyD,EAAA,MAMvB3D,MAAM,8CAAD,OAA+CW,KAN7B,QAMxCT,EANwC,kCAAAyD,EAAA,MAQvBzD,EAASC,QARc,QAQpCC,EARoC,OAS1CM,EAdqC,CACrCpB,KAH2B,gBAI3BuE,UAYwBzD,IATkB,wC,mCCiO7B0D,G,mBAhOb,aAAe,IAAD,8BACZ,+CACK5C,MAAQ,CACX6C,SAAS,EACTC,MAAO,GACPC,gBAAiB,EACjBlC,WAAY,GAEd,EAAKmC,cAAgB,EAAKA,cAAc3C,KAAnB,gBACrB,EAAK4C,YAAc,EAAKA,YAAY5C,KAAjB,gBACnB,EAAK6C,aAAe,EAAKA,aAAa7C,KAAlB,gBAVR,E,iFAcZtC,KAAKiF,kB,qCAILjF,KAAKkD,UAAS,SAACkC,GAAD,MACZ,CACEJ,gBAAiBI,EAAKJ,gBAAkB,EACxCF,SAAS,EACTC,MAAO,OAGX/E,KAAKiF,gBACL,IAAMI,EAAeC,SAASC,iBAAiB,uBACxBD,SAASC,iBAAiB,yBAClCC,SAAQ,SAACC,GACtBA,EAAOC,MAAMC,OAAS,MAExBN,EAAaG,SAAQ,SAACC,GACpBA,EAAOC,MAAMC,OAAS,Q,+BAKxB,IAKIC,EALE3D,EAAQe,KAAK6C,MAAMlE,aAAamE,QAAQ,UADvC,EAEwC9F,KAAKiC,MAA5C8C,EAFD,EAECA,MAAOC,EAFR,EAEQA,gBAAiBlC,EAFzB,EAEyBA,WAMhC,OALqB9C,KAAKC,MAAlB8F,SAKSf,GAAiBgB,YAClC,IAAK,OACHJ,EAAM,EACN,MACF,IAAK,SACHA,EAAM,EACN,MACF,IAAK,OACHA,EAXW,EAiBb,IAAIK,EAAOhE,EAAMW,OAAOG,MACxBkD,EAAOA,EAnBK,GAmBSL,EAAMb,EAC3BpD,aAAaC,QACX,QACAoB,KAAKC,UAAU,CAAEL,OAAO,eAAMX,EAAMW,OAAb,CAAqBG,MAAOkD,EAAMnD,oB,8BAIrDoD,GAAI,IAAD,OACc,kBAAnBA,EAAE/C,OAAO/C,MACXJ,KAAKkD,UAAS,SAACkC,GAAD,MAAW,CAAEN,SAAS,EAAMhC,WAAYsC,EAAKtC,WAAa,MACtE,kBAAM,EAAKqD,YAEbnG,KAAKkD,SAAS,CAAE4B,SAAS,IAE3B9E,KAAKkF,cACL,IAAMG,EAAeC,SAASC,iBAAiB,uBACxBD,SAASC,iBAAiB,yBAClCC,SAAQ,SAACC,GACtBA,EAAOC,MAAMC,OAAS,+BAExBN,EAAaG,SAAQ,SAACC,GACpBA,EAAOC,MAAMC,OAAS,gC,oCAKxBS,OAAOC,cAAcrG,KAAKsG,Y,sCAGX,IAAD,OAEdtG,KAAKsG,SAAWC,aAAY,WAO1B,GANA,EAAKrD,UAAS,SAACsD,GAAD,sBACTA,EADS,CAEZzB,MAAOyB,EAAUzB,MAAQ,OAGT,EAAK9C,MAAf8C,MACI,EAAG,CACb,EAAKG,cACL,EAAKhC,SAAS,CACZuD,SAAU,cACV3B,SAAS,IAEX,IAAMO,EAAeC,SAASC,iBAAiB,uBACxBD,SAASC,iBAAiB,yBAClCC,SAAQ,SAACC,GACtBA,EAAOC,MAAMC,OAAS,+BAExBN,EAAaG,SAAQ,SAACC,GACpBA,EAAOC,MAAMC,OAAS,iCApBhB,O,8BA0BL,IACCZ,EAAU/E,KAAKiC,MAAf8C,MACR,OACE,yBAAKxE,UAAU,YACb,kBAAC,IAAD,CAAaA,UAAU,aAAamC,KAAK,OACzC,0BAAMnC,UAAU,QACZwE,M,6BAMH2B,GACL,IAAMlD,EAAM,CACV,QAAS,IACT,SAAU,IACV,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,SAAU,IACV,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,UAGb,OAAOkD,EAAKC,QAAQ,mBAAmB,SAACC,GAAD,OAAOpD,EAAIoD,Q,+BAG1C,IAAD,SAC8B5G,KAAKiC,MAAlC+C,EADD,EACCA,gBAAiBF,EADlB,EACkBA,QACjBiB,EAAa/F,KAAKC,MAAlB8F,SACFc,EAAQ7G,KAAK6G,QACnB,GAAI7B,IAAoBe,EAASe,OAAQ,CACvC,IAAM7E,EAAQe,KAAK6C,MAAMlE,aAAaM,OAChC8E,EAAQC,IAAI/E,EAAMW,OAAOC,eAmB/B,OAlBIlB,aAAasF,QACftF,aAAasF,QAAUjE,KAAKC,UAAL,sBAClBD,KAAK6C,MAAMlE,aAAasF,UADN,CAErB,CACE/G,KAAM+B,EAAMW,OAAO1C,KACnB6C,MAAOd,EAAMW,OAAOG,MACpBmE,QAAQ,mCAAD,OAAqCH,OAIhDpF,aAAasF,QAAUjE,KAAKC,UAAU,CACpC,CACE/C,KAAM+B,EAAMW,OAAO1C,KACnB6C,MAAOd,EAAMW,OAAOG,MACpBmE,QAAQ,mCAAD,OAAqCH,MAI3C,kBAAC,IAAD,CAAUtE,GAAG,cAEtB,OACE,6BACE,yBAAKlC,UAAU,iBACZsG,EACD,wBAAInG,cAAY,qBACZqF,EAASf,GAAiBf,UAG9B,uBAAGvD,cAAY,gBAAgBH,UAAU,YACrCP,KAAKmH,OAAOpB,EAASf,GAAiBe,YAG3CA,EAASf,GAAiBoC,UAAU5D,KAAI,SAACiD,EAAUY,GAAX,OACvC,yBAAK5D,IAAM4D,EAAQ9G,UAAU,eAC3B,4BACEA,UAAU,yBACVkD,IAAM4D,EACNhH,KAAK,SACLD,MAAQqG,EAASrG,MACjBM,cAAc+F,EAASa,WACvB5D,SAAWoB,EACXnB,QAAU,SAAC4D,GAAD,OAAW,EAAKC,QAAQD,KAEhC,EAAKJ,OAAOV,EAASA,eAK1B3B,GAEG,yBAAKvE,UAAU,eACb,4BACEA,UAAU,2BACVG,cAAY,WACZiD,QAAU3D,KAAKmF,aACf9E,KAAK,UAJP,oB,GA7MQM,IAAMC,YCiCf6G,G,mBAnCb,WAAYxH,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAMgC,EAAQe,KAAK6C,MAAMlE,aAAamE,QAAQ,UAF7B,OAIjB,EAAK7D,MAAQ,CACXyF,OAAO,mCAAD,OAAsCV,IAAI/E,EAAMW,OAAOC,gBAC7DE,MAAOd,EAAMW,OAAOG,MACpB7C,KAAM+B,EAAMW,OAAO1C,MAPJ,E,sEAWT,IAAD,EACyBF,KAAKiC,MAA7ByF,EADD,EACCA,OAAQ3E,EADT,EACSA,MAAO7C,EADhB,EACgBA,KACvB,OACE,4BAAQK,UAAU,UAChB,6BACE,yBACE6C,IAAMsE,EACNpE,IAAI,SACJ5C,cAAY,yBACZH,UAAU,WAEZ,4BAAQG,cAAY,sBAApB,oBAAuDR,IACvD,yBAAKK,UAAU,SACb,gCACE,0CACA,0BAAMG,cAAY,gBAAiBqC,W,GA3B5BnC,cCIf+G,G,mMACiB,IAAD,EACe3H,KAAKC,MAA9B2H,EADU,EACVA,cAAelG,EADL,EACKA,MACnB2C,EAAW,GACX1C,aAAa0C,WACfA,EAAWrB,KAAK6C,MAAMlE,aAAa0C,WAErCuD,EAAclG,EAAO2C,K,8BAGfwD,GAIN,IAHA,IACIC,EACAC,EAFAC,EAAeH,EAAMf,OAGD,IAAjBkB,GACLD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,I,+BAGC,IAAD,OACCjD,EAAc5E,KAAKC,MAAnB2E,UACJwD,EAAe,GA6DnB,OA5DIxD,EAAUkC,OAAS,IACrBsB,EAAexD,EAAU,GAAGyD,QAAQ7E,KAAI,SAAC8E,GAAc,IAC7BC,EAA0CD,EAA1DE,eAA4CC,EAAcH,EAAjCI,kBACjC,GAAsB,YAAlBJ,EAASjI,KAAoB,CAC/B,GAAgB,SAAZkI,EAAoB,CACtB,IAAMI,EAAW,CACf,CACElC,SAAU8B,EACVjB,WAAY,iBACZlH,MAAO,iBAET,CACEqG,SAAUgC,EAAU,GACpBnB,WAAY,iBACZlH,MAAO,gBAGX,OAAO,eAAKkI,EAAZ,CAAsBlB,UAAWuB,IAEnC,IAAMA,EAAW,CACf,CACElC,SAAUgC,EAAU,GACpBnB,WAAY,iBACZlH,MAAO,eAET,CACEqG,SAAU8B,EACVjB,WAAY,iBACZlH,MAAO,kBAGX,OAAO,eAAKkI,EAAZ,CAAsBlB,UAAWuB,IAEnC,IAAMA,EAAW,CACf,CACElC,SAAU8B,EACVjB,WAAY,iBACZlH,MAAO,iBAET,CACEqG,SAAUgC,EAAU,GACpBnB,WAAY,iBACZlH,MAAO,eAET,CACEqG,SAAUgC,EAAU,GACpBnB,WAAY,iBACZlH,MAAO,eAET,CACEqG,SAAUgC,EAAU,GACpBnB,WAAY,iBACZlH,MAAO,gBAGLwI,EAAc,EAAKC,QAAQF,GACjC,OAAO,eAAKL,EAAZ,CAAsBlB,UAAWwB,QAKnC,yBAAKrI,UAAU,kBACb,kBAAC,EAAD,MACCqE,EAAUkC,OAAS,EAChB,kBAAC,EAAD,CAAWf,SAAWqC,IACtB,kB,GA5FOzH,IAAMC,YAiHVkD,eAfS,SAAC7B,GAAD,MAAY,CAClCP,MAAOO,EAAM6G,aAAapH,MAC1BkD,UAAW3C,EAAM8G,iBAAiBnE,cAGT,SAACnD,GAAD,MAAe,CACxCmG,cAAe,SAAClG,EAAO2C,GAAR,OAAqB5C,EAASgD,EAAe/C,EAAO2C,QAStDP,CAA6C6D,GCjH7CqB,EANQ,kBACrB,6BACE,0ECgBWC,G,OAhBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAO7B,EAAY,EAAZA,MACfnH,EAAyBgJ,EAAzBhJ,KAAMgH,EAAmBgC,EAAnBhC,QAASnE,EAAUmG,EAAVnG,MACvB,OACE,4BACE,6BACE,yBAAKK,IAAM8D,EAAU5D,IAAMpD,IAC3B,wBAAIQ,cAAA,sBAA6B2G,IAAYnH,GAC7C,wBAAIQ,cAAA,uBAA8B2G,IAAYtE,OCyCvCoG,E,YA7Cb,aAAe,IAAD,8BACZ,+CACKlH,MAAQ,CACXmH,QAASpG,KAAK6C,MAAMlE,aAAasF,SAAW,OAE9C,EAAKoC,eAAiB,EAAKA,eAAe/G,KAApB,gBALV,E,iFASZtC,KAAKqJ,mB,uCAGW,IACRD,EAAYpJ,KAAKiC,MAAjBmH,QACJA,EAAQtC,OAAS,GACnB9G,KAAKkD,SAAS,CACZkG,QAASA,EAAQE,MAAK,SAAC5E,EAAG6E,GAAJ,OACpBC,SAASD,EAAExG,MAAO,IAAMyG,SAAS9E,EAAE3B,MAAO,W,+BAKxC,IACAqG,EAAYpJ,KAAKiC,MAAjBmH,QACR,OACE,yBAAK7I,UAAU,kBACb,kBAAC,IAAD,CAAMkC,GAAG,KACP,4BAAQ/B,cAAY,cAAcH,UAAU,oBAAoBF,KAAK,UACnE,kBAAC,IAAD,QAGJ,wBAAIK,cAAY,iBAAhB,oBACA,4BAEI0I,EAAUA,EAAQ5F,KAAI,SAAC0F,EAAO7B,GAAR,OACpB,kBAAC,EAAD,CAAQ5D,IAAG,UAAM4D,EAAN,OAAmBA,MAAQA,EAAQ6B,MAAQA,OAEpD,kBAAC,EAAD,Y,GAtCMvI,IAAMC,WC6Eb6I,G,mBA7Eb,aAAe,IAAD,sBACZ,8CACA,IAAMxH,EAAQe,KAAK6C,MAAMlE,aAAamE,QAAQ,UAFlC,OAGZ,EAAK7D,MAAQ,CACXa,WAAYb,EAAMW,OAAOE,WACzBC,MAAOd,EAAMW,OAAOG,OALV,E,yEAUZ,OACE,wBAAIxC,UAAU,MAAd,iB,kCAOF,OACE,wBAAIA,UAAU,MAAd,yB,mCAMSmJ,EAAS3G,GACpB,OACE,6BAASxC,UAAU,WACjB,2BACE,kDACA,0BAAMG,cAAY,2BAA4BgJ,GAC9C,gDAEF,2BACE,8CACA,0BAAMhJ,cAAY,wBAAyBqC,GAC3C,8C,+BAME,IAAD,EACuB/C,KAAKiC,MAA3Ba,EADD,EACCA,WAAYC,EADb,EACaA,MAEpB,OACE,yBAAKxC,UAAU,sBACb,0BAAMA,UAAU,WACd,kBAAC,EAAD,MACA,wBAAIG,cAAY,iBACZoC,GANc,EAMmB9C,KAAK2J,YAAc3J,KAAK4J,aAE5D5J,KAAK6J,aAAa/G,EAAYC,GAC/B,6BACE,kBAAC,IAAD,CACExC,UAAU,OACVkC,GAAG,WACH/B,cAAY,eAHd,gBAQF,6BACE,kBAAC,IAAD,CACEH,UAAU,OACVkC,GAAG,IACH/B,cAAY,kBAHd,0B,GAhEWE,c,mCCCjBkJ,EAAgB,CACpBC,aAAa,EACbrI,MAAO,GACPsI,OAAQ,IAgBKlB,EAbM,WAAoC,IAAnC7G,EAAkC,uDAA1B6H,EAAeG,EAAW,uCACtD,OAAQA,EAAO5J,MACf,IXZ8B,mBWa5B,OAAO,eAAK4B,EAAZ,CAAmB8H,aAAa,IAClC,IXbyB,cWcvB,OAAO,eAAK9H,EAAZ,CAAmBP,MAAOuI,EAAOvI,MAAOqI,aAAa,IACvD,IXd6B,kBWe3B,OAAO,eAAK9H,EAAZ,CAAmB+H,OAAQC,EAAOpI,MAAOkI,aAAa,IACxD,QACE,OAAO9H,ICnBLiI,EAAe,CACnBtF,UAAW,ICCEuF,kBAAgB,CAAErB,eAAcC,iBDEhC,WAAyD,IAA/B9G,EAA8B,uDAAtBiI,EAAcD,EAAQ,uCACrE,OAAQA,EAAO5J,MACf,ITR2B,gBSSzB,OAAO,eAAK4B,EAAZ,CAAmB2C,UAAW,CAACqF,EAAOrF,aACxC,QACE,OAAO3C,MENImI,cAAYC,EAAaC,YAAQC,YAAgBC,OCEhEC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,MAAQA,GAChB,mBCAS,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WAAWC,UAAY1B,IACnC,kBAAC,IAAD,CAAOyB,KAAK,YAAYC,UAAY9G,IACpC,kBAAC,IAAD,CAAO6G,KAAK,YAAYC,UAAYlD,IACpC,kBAAC,IAAD,CAAOiD,KAAK,YAAYC,UAAYpB,IACpC,kBAAC,IAAD,CAAOqB,OAAK,EAACF,KAAK,IAAIC,UAAYE,ODPlC,QAGJzF,SAAS0F,eAAe,W","file":"static/js/main.231a6aec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CustomInput extends React.Component {\n  render() {\n    const { name, dataTestId, value, type, onChange } = this.props;\n    return (\n      <input\n        className=\"form-control\"\n        type={ type }\n        required=\"required\"\n        name={ name }\n        placeholder={ name }\n        data-testid={ dataTestId }\n        value={ value }\n        onChange={ onChange }\n      />\n    );\n  }\n}\n\nCustomInput.propTypes = {\n  name: PropTypes.string,\n  dataTestId: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n}.isRequired;\n\nexport default CustomInput;\n","const loginfo = [\n  {\n    name: 'Nome',\n    type: 'text',\n    dataTestId: 'input-player-name',\n  },\n  {\n    name: 'Email',\n    type: 'email',\n    dataTestId: 'input-gravatar-email',\n  },\n];\nexport default loginfo;\n","const URL = 'https://opentdb.com/api_token.php?command=request';\nconst fetchToken = () => (\n  fetch(URL)\n    .then((response) => (\n      response\n        .json()\n        .then((data) => (response.ok ? Promise.resolve(data) : Promise.reject(data)))\n    ))\n);\nexport default fetchToken;\n","import fetchToken from '../services/fetchToken';\n\nexport const REQUESTING_TOKEN = 'REQUESTING_TOKEN';\nexport const FOUND_TOKEN = 'FOUND_TOKEN';\nexport const TOKEN_NOT_FOUND = 'TOKEN_NOT_FOUND';\n\nfunction requestingToken() {\n  return { type: REQUESTING_TOKEN };\n}\n\nfunction foundToken(token) {\n  localStorage.setItem('token', token);\n  return { type: FOUND_TOKEN, token };\n}\n\nfunction tokenNotFound(error) {\n  return { type: TOKEN_NOT_FOUND, error };\n}\n\nexport function tokenFetcher() {\n  return (dispatch) => {\n    dispatch(requestingToken());\n    return fetchToken()\n      .then(\n        (response) => dispatch(foundToken(response.token)),\n        (error) => dispatch(tokenNotFound(error.message)),\n      );\n  };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FaCog } from 'react-icons/fa';\nimport CustomInput from '../components/CustomInput';\nimport loginRequirements from '../services/loginRequirements';\nimport { tokenFetcher } from '../actions/actionsFetchToken';\nimport './Login.css';\nimport trivia from '../trivia.png';\n\nclass FormLogin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      Nome: '',\n      Email: '',\n      Disabled: true,\n    };\n    this.stateUpdater = this.stateUpdater.bind(this);\n    this.disableCheck = this.disableCheck.bind(this);\n    this.setLocalStorage = this.setLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchToken } = this.props;\n    fetchToken();\n  }\n\n  settingsButton() {\n    return (\n      <div className=\"float-right\">\n        <Link to=\"settings\">\n          <button type=\"button\" data-testid=\"btn-settings\" className=\"btn-set\">\n            <FaCog size=\"25\" />\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  setLocalStorage() {\n    const { Nome, Email } = this.state;\n    const stateInicial = {\n      player: {\n        name: Nome,\n        gravatarEmail: Email,\n        assertions: 0,\n        score: 0,\n      },\n    };\n\n    localStorage.setItem('state', JSON.stringify(stateInicial));\n  }\n\n  disableCheck() {\n    const { Nome, Email } = this.state;\n    if (Nome !== '' && Email !== '') {\n      this.setState(() => ({ Disabled: false }));\n    } else {\n      this.setState(() => ({ Disabled: true }));\n    }\n  }\n\n  stateUpdater({ target }) {\n    const { name, value } = target;\n    this.setState(() => ({ [name]: value }), () => this.disableCheck());\n  }\n\n  render() {\n    const { Disabled, Nome, Email } = this.state;\n    return (\n      <div className=\"full-container\">\n        <div className=\"login-form\">\n          <img src={ trivia } alt=\"trivia\" className=\"text-center trivia-logo\" />\n          {/* <h1 className=\"text-center\">Trivia</h1> */}\n          <form>\n            {\n              loginRequirements.map(({ name, type, dataTestId }) => (\n                <CustomInput\n                  key={ name }\n                  name={ name }\n                  value={ name === 'Nome' ? Nome : Email }\n                  type={ type }\n                  dataTestId={ dataTestId }\n                  onChange={ this.stateUpdater }\n                />\n              ))\n            }\n          </form>\n          <Link className=\"link-play\" to=\"/gamepage\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              disabled={ Disabled }\n              onClick={ this.setLocalStorage }\n              id=\"play-button\"\n              className=\"btn btn-info btn-block\"\n            >\n              Jogar!!\n            </button>\n          </Link>\n          {this.settingsButton() }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchToken: () => dispatch(tokenFetcher()),\n});\n\nFormLogin.propTypes = {\n  fetchToken: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(FormLogin);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Settings.css';\nimport { FaHome } from 'react-icons/fa';\n\nexport default class Settings extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      amount: '5',\n      category: '',\n      difficult: '',\n      type: '',\n      redirect: false,\n    };\n\n    this.stateUpdater = this.stateUpdater.bind(this);\n    this.saveChanges = this.saveChanges.bind(this);\n  }\n\n  saveChanges() {\n    localStorage.settings = JSON.stringify(this.state);\n    this.setState({ redirect: true });\n  }\n\n  stateUpdater({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { redirect, amount, category, difficult, type } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"settings-container\">\n        <h1 data-testid=\"settings-title\" className=\"h1\">Settings</h1>\n\n        <Link to=\"/\">\n          <button type=\"button\" className=\"btn btn-info home\">\n            <FaHome />\n          </button>\n        </Link>\n\n        <form className=\"form-api\">\n          <div className=\"flex-labels\">\n            <label htmlFor=\"amount\">\n              Number of Questions:\n              <input\n                type=\"number\"\n                name=\"amount\"\n                id=\"trivia_amount\"\n                className=\"form-control\"\n                onChange={ this.stateUpdater }\n                min=\"1\"\n                max=\"50\"\n                value={ amount }\n              />\n            </label>\n\n            <label htmlFor=\"category\">\n              Select Category:\n              <select\n                onChange={ this.stateUpdater }\n                name=\"category\"\n                value={ category }\n                className=\"form-control\"\n              >\n                <option value=\"\">Any Category</option>\n                <option value=\"9\">General Knowledge</option>\n                <option value=\"10\">Entertainment: Books</option>\n                <option value=\"11\">Entertainment: Film</option>\n                <option value=\"12\">Entertainment: Music</option>\n                <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\n                <option value=\"14\">Entertainment: Television</option>\n                <option value=\"15\">Entertainment: Video Games</option>\n                <option value=\"16\">Entertainment: Board Games</option>\n                <option value=\"17\">Science &amp; Nature</option>\n                <option value=\"18\">Science: Computers</option>\n                <option value=\"19\">Science: Mathematics</option>\n                <option value=\"20\">Mythology</option>\n                <option value=\"21\">Sports</option>\n                <option value=\"22\">Geography</option>\n                <option value=\"23\">History</option>\n                <option value=\"24\">Politics</option>\n                <option value=\"25\">Art</option>\n                <option value=\"26\">Celebrities</option>\n                <option value=\"27\">Animals</option>\n                <option value=\"28\">Vehicles</option>\n                <option value=\"29\">Entertainment: Comics</option>\n                <option value=\"30\">Science: Gadgets</option>\n                <option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\n                <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\n              </select>\n            </label>\n\n            <label htmlFor=\"difficult\">\n              Select Difficulty:\n              <select\n                onChange={ this.stateUpdater }\n                name=\"difficult\"\n                value={ difficult }\n                className=\"form-control\"\n              >\n                <option value=\"\">Any Difficulty</option>\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n              </select>\n            </label>\n\n            <label htmlFor=\"type\">\n              Select Type:\n              <select\n                onChange={ this.stateUpdater }\n                value={ type }\n                name=\"type\"\n                className=\"form-control\"\n              >\n                <option value=\"\">Any Type</option>\n                <option value=\"multiple\">Multiple Choice</option>\n                <option value=\"boolean\">True / False</option>\n              </select>\n            </label>\n\n            <button\n              className=\"btn btn-lg btn-primary btn-block\"\n              type=\"button\"\n              onClick={ this.saveChanges }\n            >\n              Confirm Settings\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","export const TOKEN_SUCCESS = 'TOKEN_SUCCESS';\n\nconst requestSuccess = (questions) => ({\n  type: TOKEN_SUCCESS,\n  questions,\n});\n\nconst fetchQuestions = (token, settings) => async (dispatch) => {\n  let response = {};\n  if (settings !== '') {\n    const { amount, category, difficult, type } = settings;\n    response = await fetch(`https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficult}&type=${type}&token=${token}`);\n  } else {\n    response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n  }\n  const data = await response.json();\n  dispatch(requestSuccess(data));\n};\n\nexport default fetchQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { ImStopwatch } from 'react-icons/im';\nimport { Redirect } from 'react-router-dom';\nimport './Questions.css';\n\nclass Questions extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      disable: false,\n      tempo: 30,\n      currentQuestion: 0,\n      assertions: 0,\n    };\n    this.timerFunction = this.timerFunction.bind(this);\n    this.stopCounter = this.stopCounter.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerFunction();\n  }\n\n  nextQuestion() {\n    this.setState((prev) => (\n      {\n        currentQuestion: prev.currentQuestion + 1,\n        disable: false,\n        tempo: 30,\n      }\n    ));\n    this.timerFunction();\n    const buttonsWrong = document.querySelectorAll('[value=WrongAnswer]');\n    const buttonsCorrect = document.querySelectorAll('[value=CorrectAnswer]');\n    buttonsCorrect.forEach((button) => {\n      button.style.border = '';\n    });\n    buttonsWrong.forEach((button) => {\n      button.style.border = '';\n    });\n  }\n\n  scored() {\n    const state = JSON.parse(localStorage.getItem('state'));\n    const { tempo, currentQuestion, assertions } = this.state;\n    const { question } = this.props;\n    const dez = 10;\n    const tres = 3;\n    let dif;\n\n    switch (question[currentQuestion].difficulty) {\n    case 'easy':\n      dif = 1;\n      break;\n    case 'medium':\n      dif = 2;\n      break;\n    case 'hard':\n      dif = tres;\n      break;\n    default:\n      break;\n    }\n\n    let soma = state.player.score;\n    soma = soma + dez + (dif * tempo);\n    localStorage.setItem(\n      'state',\n      JSON.stringify({ player: { ...state.player, score: soma, assertions } }),\n    );\n  }\n\n  choosed(e) {\n    if (e.target.value === 'CorrectAnswer') {\n      this.setState((prev) => ({ disable: true, assertions: prev.assertions + 1 }),\n        () => this.scored());\n    } else {\n      this.setState({ disable: true });\n    }\n    this.stopCounter();\n    const buttonsWrong = document.querySelectorAll('[value=WrongAnswer]');\n    const buttonsCorrect = document.querySelectorAll('[value=CorrectAnswer]');\n    buttonsCorrect.forEach((button) => {\n      button.style.border = '3px solid rgb(6, 240, 15)';\n    });\n    buttonsWrong.forEach((button) => {\n      button.style.border = '3px solid rgb(255, 0, 0)';\n    });\n  }\n\n  stopCounter() {\n    window.clearInterval(this.interval);\n  }\n\n  timerFunction() {\n    const sec = 1000;\n    this.interval = setInterval(() => {\n      this.setState((prevState) => ({\n        ...prevState,\n        tempo: prevState.tempo - 1,\n      }\n      ));\n      const { tempo } = this.state;\n      if (tempo < 1) {\n        this.stopCounter();\n        this.setState({\n          resposta: 'WrongAnswer',\n          disable: true,\n        });\n        const buttonsWrong = document.querySelectorAll('[value=WrongAnswer]');\n        const buttonsCorrect = document.querySelectorAll('[value=CorrectAnswer]');\n        buttonsCorrect.forEach((button) => {\n          button.style.border = '3px solid rgb(6, 240, 15)';\n        });\n        buttonsWrong.forEach((button) => {\n          button.style.border = '3px solid rgb(255, 0, 0)';\n        });\n      }\n    }, sec);\n  }\n\n  timer() {\n    const { tempo } = this.state;\n    return (\n      <div className=\"div-time\">\n        <ImStopwatch className=\"stop-watch\" size=\"50\" />\n        <span className=\"time\">\n          { tempo }\n        </span>\n      </div>\n    );\n  }\n\n  decode(text) {\n    const map = {\n      '&amp;': '&',\n      '&#038;': '&',\n      '&lt;': '<',\n      '&gt;': '>',\n      '&quot;': '\"',\n      '&#039;': '\\'',\n      '&#8217;': '’',\n      '&#8216;': '‘',\n      '&#8211;': '–',\n      '&#8212;': '—',\n      '&#8230;': '…',\n      '&#8221;': '”',\n    };\n\n    return text.replace(/&[\\w\\d#]{2,5};/g, (m) => map[m]);\n  }\n\n  render() {\n    const { currentQuestion, disable } = this.state;\n    const { question } = this.props;\n    const timer = this.timer();\n    if (currentQuestion === question.length) {\n      const state = JSON.parse(localStorage.state);\n      const email = md5(state.player.gravatarEmail);\n      if (localStorage.ranking) {\n        localStorage.ranking = JSON.stringify([\n          ...JSON.parse(localStorage.ranking),\n          {\n            name: state.player.name,\n            score: state.player.score,\n            picture: `https://www.gravatar.com/avatar/${email}`,\n          },\n        ]);\n      } else {\n        localStorage.ranking = JSON.stringify([\n          {\n            name: state.player.name,\n            score: state.player.score,\n            picture: `https://www.gravatar.com/avatar/${email}`,\n          },\n        ]);\n      }\n      return <Redirect to=\"/feedback\" />;\n    }\n    return (\n      <div>\n        <div className=\"div-questions\">\n          {timer }\n          <h4 data-testid=\"question-category\">\n            { question[currentQuestion].category }\n          </h4>\n\n          <p data-testid=\"question-text\" className=\"question\">\n            { this.decode(question[currentQuestion].question) }\n          </p>\n        </div>\n        {question[currentQuestion].respostas.map((resposta, index) => (\n          <div key={ index } className=\"text-center\">\n            <button\n              className=\"col-md-6 option btn-sm\"\n              key={ index }\n              type=\"button\"\n              value={ resposta.value }\n              data-testid={ resposta.dataTestid }\n              disabled={ disable }\n              onClick={ (event) => this.choosed(event) }\n            >\n              { this.decode(resposta.resposta) }\n            </button>\n          </div>\n        )) }\n        {\n          (disable\n            && (\n              <div className=\"text-center\">\n                <button\n                  className=\"btn-next btn btn-primary\"\n                  data-testid=\"btn-next\"\n                  onClick={ this.nextQuestion }\n                  type=\"button\"\n                >\n                  Próxima\n                </button>\n              </div>\n            ))\n        }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  question: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default Questions;\n","import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    const state = JSON.parse(localStorage.getItem('state'));\n\n    this.state = {\n      avatar: `https://www.gravatar.com/avatar/${(md5(state.player.gravatarEmail))}`,\n      score: state.player.score,\n      name: state.player.name,\n    };\n  }\n\n  render() {\n    const { avatar, score, name } = this.state;\n    return (\n      <header className=\"header\">\n        <div>\n          <img\n            src={ avatar }\n            alt=\"avatar\"\n            data-testid=\"header-profile-picture\"\n            className=\"avatar\"\n          />\n          <strong data-testid=\"header-player-name\">{` Jogador: ${name}`}</strong>\n          <div className=\"score\">\n            <strong>\n              <span>Pontos: </span>\n              <span data-testid=\"header-score\">{ score }</span>\n            </strong>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchQuestions from '../actions/actionsQuestions';\nimport Questions from '../components/Questions';\nimport Header from '../components/Header';\nimport './Game.css';\n\nclass Game extends React.Component {\n  componentDidMount() {\n    const { fetchQuestion, token } = this.props;\n    let settings = '';\n    if (localStorage.settings) {\n      settings = JSON.parse(localStorage.settings);\n    }\n    fetchQuestion(token, settings);\n  }\n\n  shuffle(array) {\n    let currentIndex = array.length;\n    let temporaryValue;\n    let randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n    const { questions } = this.props;\n    let newQuestions = [];\n    if (questions.length > 0) {\n      newQuestions = questions[0].results.map((pergunta) => {\n        const { correct_answer: correct, incorrect_answers: incorrect } = pergunta;\n        if (pergunta.type === 'boolean') {\n          if (correct === 'True') {\n            const detalhes = [\n              {\n                resposta: correct,\n                dataTestid: 'correct-answer',\n                value: 'CorrectAnswer',\n              },\n              {\n                resposta: incorrect[0],\n                dataTestid: 'wrong-answer-0',\n                value: 'WrongAnswer',\n              },\n            ];\n            return { ...pergunta, respostas: detalhes };\n          }\n          const detalhes = [\n            {\n              resposta: incorrect[0],\n              dataTestid: 'wrong-answer-0',\n              value: 'WrongAnswer',\n            },\n            {\n              resposta: correct,\n              dataTestid: 'correct-answer',\n              value: 'CorrectAnswer',\n            },\n          ];\n          return { ...pergunta, respostas: detalhes };\n        }\n        const detalhes = [\n          {\n            resposta: correct,\n            dataTestid: 'correct-answer',\n            value: 'CorrectAnswer',\n          },\n          {\n            resposta: incorrect[0],\n            dataTestid: 'wrong-answer-0',\n            value: 'WrongAnswer',\n          },\n          {\n            resposta: incorrect[1],\n            dataTestid: 'wrong-answer-1',\n            value: 'WrongAnswer',\n          },\n          {\n            resposta: incorrect[2],\n            dataTestid: 'wrong-answer-2',\n            value: 'WrongAnswer',\n          },\n        ];\n        const newDetalhes = this.shuffle(detalhes);\n        return { ...pergunta, respostas: newDetalhes };\n      });\n    }\n\n    return (\n      <div className=\"game-container\">\n        <Header />\n        {questions.length > 0\n          ? <Questions question={ newQuestions } />\n          : 'Loading...' }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.tokenReducer.token,\n  questions: state.questionsReducer.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchQuestion: (token, settings) => dispatch(fetchQuestions(token, settings)),\n});\n\nGame.propTypes = {\n  token: PropTypes.string.isRequired,\n  questions: PropTypes.arrayOf(Object).isRequired,\n  fetchQuestion: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\n\nconst NenhumRegistro = () => (\n  <div>\n    <h1> Nenhum player encontrado. Volte depois.</h1>\n  </div>\n);\n\nexport default NenhumRegistro;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './player.css';\n\nconst Player = ({ entry, index }) => {\n  const { name, picture, score } = entry;\n  return (\n    <li>\n      <div>\n        <img src={ picture } alt={ name } />\n        <h5 data-testid={ `player-name-${index}` }>{ name }</h5>\n        <h5 data-testid={ `player-score-${index}` }>{ score }</h5>\n      </div>\n    </li>\n  );\n};\nPlayer.propTypes = {\n  entry: PropTypes.instanceOf(Object).isRequired,\n  index: PropTypes.number.isRequired,\n};\nexport default Player;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaHome } from 'react-icons/fa';\nimport NenhumRegistro from '../components/NenhumRegistroEncontrado';\nimport Player from '../components/Player';\n\nclass Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      players: JSON.parse(localStorage.ranking || '[]'),\n    };\n    this.sortingPlayers = this.sortingPlayers.bind(this);\n  }\n\n  componentDidMount() {\n    this.sortingPlayers();\n  }\n\n  sortingPlayers() {\n    const { players } = this.state;\n    if (players.length > 1) {\n      this.setState({\n        players: players.sort((a, b) => (\n          parseInt(b.score, 10) - parseInt(a.score, 10))),\n      });\n    }\n  }\n\n  render() {\n    const { players } = this.state;\n    return (\n      <div className=\"full-container\">\n        <Link to=\"/\">\n          <button data-testid=\"btn-go-home\" className=\"btn btn-info home\" type=\"button\">\n            <FaHome />\n          </button>\n        </Link>\n        <h1 data-testid=\"ranking-title\">Melhores Jogadas</h1>\n        <ol>\n          {\n            players ? players.map((entry, index) => (\n              <Player key={ `${index}has` } index={ index } entry={ entry } />\n            ))\n              : <NenhumRegistro />\n          }\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    const state = JSON.parse(localStorage.getItem('state'));\n    this.state = {\n      assertions: state.player.assertions,\n      score: state.player.score,\n    };\n  }\n\n  ggMessage() {\n    return (\n      <h1 className=\"h1\">\n        Mandou bem!\n      </h1>\n    );\n  }\n\n  bgMessage() {\n    return (\n      <h1 className=\"h1\">\n        Podia ser melhor...\n      </h1>\n    );\n  }\n\n  gameFeedback(answers, score) {\n    return (\n      <section className=\"section\">\n        <p>\n          <span>Você acertou </span>\n          <span data-testid=\"feedback-total-question\">{ answers }</span>\n          <span> questões!</span>\n        </p>\n        <p>\n          <span>Um total de </span>\n          <span data-testid=\"feedback-total-score\">{ score }</span>\n          <span> pontos </span>\n        </p>\n      </section>\n    );\n  }\n\n  render() {\n    const { assertions, score } = this.state;\n    const numberOfAnswers = 3;\n    return (\n      <div className=\"feedback-container\">\n        <main className=\"section\">\n          <Header />\n          <h2 data-testid=\"feedback-text\">\n            {(assertions >= numberOfAnswers) ? this.ggMessage() : this.bgMessage()}\n          </h2>\n          {this.gameFeedback(assertions, score)}\n          <div>\n            <Link\n              className=\"link\"\n              to=\"/ranking\"\n              data-testid=\"btn-ranking\"\n            >\n              VER RANKING\n            </Link>\n          </div>\n          <div>\n            <Link\n              className=\"link\"\n              to=\"/\"\n              data-testid=\"btn-play-again\"\n            >\n            JOGAR NOVAMENTE\n            </Link>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import {\n  REQUESTING_TOKEN,\n  FOUND_TOKEN,\n  TOKEN_NOT_FOUND,\n} from '../actions/actionsFetchToken';\n\nconst INICIAL_STATE = {\n  isFetching1: false,\n  token: '',\n  error1: '',\n};\n\nconst tokenReducer = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUESTING_TOKEN:\n    return { ...state, isFetching1: true };\n  case FOUND_TOKEN:\n    return { ...state, token: action.token, isFetching1: false };\n  case TOKEN_NOT_FOUND:\n    return { ...state, error1: action.error, isFetching1: false };\n  default:\n    return state;\n  }\n};\n\nexport default tokenReducer;\n","import { TOKEN_SUCCESS } from '../actions/actionsQuestions';\n\nconst initialState = {\n  questions: [],\n};\n\nexport default function questionsReducer(state = initialState, action) {\n  switch (action.type) {\n  case TOKEN_SUCCESS:\n    return { ...state, questions: [action.questions] };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport tokenReducer from './tokenReducer';\nimport questionsReducer from './questionReducer';\n\nexport default combineReducers({ tokenReducer, questionsReducer });\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nexport default createStore(rootReducer, compose(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Game from './pages/Game';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route path=\"/ranking\" component={ Ranking } />\n      <Route path=\"/settings\" component={ Settings } />\n      <Route path=\"/gamepage\" component={ Game } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route exact path=\"/\" component={ Login } />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}